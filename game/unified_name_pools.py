# unified_name_pools.py
# 통합 이름 풀 시스템

# unified_name_pools.py
# 통합 이름 풀 시스템

NAME_POOLS = {
    "western": {
        # 남성 이름
        "male": [
            "아리우스", "발렌타인", "가브리엘", "라파엘", "카이저", "레오나르드", "세바스찬", "알렉산더",
            "막시무스", "아드리안", "루카스", "니콜라스", "도미닉", "빈센트", "에밀리오", "마르코",
            "클라우디우스", "오거스트", "바실리우스", "이그니스", "펠릭스", "라이언", "에릭",
            "마틴", "엘리아스", "다미안", "율리안", "카를로스", "디에고", "파블로", "프란시스",
            "로드리고", "안토니오", "페드로", "미구엘", "호세", "루이스", "페르난도", "애드워드",
            "라몬", "호르헤", "카를로스", "마누엘", "프랑크", "올리버", "해리", "잭", "윌리엄",
            "제임스", "찰스", "로버트", "마이클", "데이비드", "리처드", "조셉", "토머스", "크리스토퍼",
            "매트", "앤소니", "마크", "도널드", "스티븐", "폴", "앤드류", "조슈아", "케네스", "케빈",
            "브라이언", "조지", "에드워드", "로널드", "티모시", "제이슨", "제프리", "라이언", "제이콥",
            "게리", "니콜라스", "에릭", "조나단", "스티븐", "래리", "저스틴", "스콧", "브랜든", "벤자민",
            "사무엘", "그레고리", "알렉산더", "패트릭", "잭", "데니스", "제리", "타일러", "애런","헤인",
            "호세", "헨리", "더글러스", "네이선", "피터", "잭슨", "노아", "이단", "루카스", "메이슨",
            "로건", "제이콥", "윌리엄", "엘리야", "웨인", "칼렙", "라이언", "니콜라스", "조던","플라튼",
            "로버트", "그레이슨", "헌터", "에이든", "카메론", "코너", "산티아고", "칼렙", "네이선",
            "이사이야", "찰리", "이반", "오웬", "루크", "딜런", "잭슨", "가빈", "데이비드", "콜튼",
            "앤드류", "맥스", "라이언", "브레이든", "토머스", "카터", "다니엘", "마이클", "아담",
            "엘라이", "벤자민", "핀", "코딘", "트리스탄", "로넌", "블레이크", "브로디", "데클란",
            "숀", "리암", "루카", "제임슨", "카일", "브랜든", "알렉스", "자이든", "자비에르","테오",
            "도미닉", "데미트리","에이스", "니키타", "블라디미르", "알렉세이", "이반", "안톤", "올렉",
            "세르겐", "빅터", "로만", "파벨", "녹티스", "아르템", "콘스탄틴", "발렌틴", "드미트리","티더","클라우드","프롬프토","그림니르","시스","랜슬롯","벤티","카이","솔","제노","슈르크","네스"
        ],
        
        # 여성 이름 (150개)
        "female": [
            "아리아", "셀레스트","유나", "이사벨라", "발레리아", "세라피나", "아드리아나", "밀리아", "비비안", "클라라","비라","유엘",
            "에밀리아", "루시아", "소피아", "올리비아", "나탈리아", "카밀라", "레오니", "미리암",
            "로사", "에스텔라", "바이올렛", "샬롯", "베아트리체", "카타리나", "레베카", "엘레나",
            "마리아", "안나", "루나", "시에라", "니나", "에바", "릴리안", "로렌", "그레이스",
            "에밀리", "한나", "엠마", "매디슨", "애슐리", "사라", "브리트니", "사만다", "제시카",
            "아만다", "스테파니", "니콜", "멜리사", "데보라", "레이첼", "캐서린", "엘리자베스", "해더",
            "티파니", "에이미", "줄리", "조이스", "빅토리아", "켈리", "크리스티나", "조안", "이블린",
            "린다", "바바라", "엘렌", "캐럴", "산드라", "도나", "루스", "샤론", "미셸", "로라",
            "에밀리", "칼라", "레베카", "스테파니", "캐롤라인", "엘리", "제나", "브룩", "케이트",
            "사바나", "제시카", "테일러", "킴벌리", "데이지", "하이디", "가브리엘라", "니키",
            "로린", "셸리", "레슬리", "에리카", "카일린", "애나", "코트니", "루비", "이바",
            "메간", "알렉시스", "소피아", "클로에", "이사벨", "에이바", "밀라", "아리아나",
            "라일라", "미아", "엠마", "아드리아나", "알리", "라일리", "캐밀라", "클레어", "빅토리아",
            "엘리아나", "나오미", "엘레나", "네이탈리", "헤일리", "브루클린", "로렌", "앨리슨",
            "가브리엘라", "세라", "자스민", "마야", "사만다", "페넬로페", "오를리", "발레리아",
            "바이올렛", "스카를릿", "애나스타샤", "베로니카", "테레사", "앤젤라", "카르멘", "몰리",
            "셸리", "레이첼", "니콜", "웬디", "리사", "킴벌리", "도나", "아니타", "리비",
            "알리시아", "알렉산드라", "키아라", "조아나", "마리사", "카렌", "스테이시", "다이애나",
            "로즈", "이솔데", "기네비어", "모르가나", "세라피나", "아르테미스", "아테나", "헤라",
            "아프로디테", "헤스티아", "데메테르", "펠레", "프레이야", "이두나", "브룬힐데", "발키리",
            "키르케", "카산드라", "안드로메다", "페넬로페", "헬렌", "클레오파트라", "이시스", "네페르티티",
            "세라핌", "우리엘", "가브리엘라", "미카엘라", "라파엘라", "아리엘", "젤다", "세레나",
            "팬도라", "포에베", "셀레네", "헤카테", "님프", "오로라", "루나", "스텔라", "노바",
            "베가", "안드로메다", "카시오페아", "라이라", "알타이르", "벨라트릭스", "리겔", "시리우스","플레임",
            "프로키온", "아크투루스", "스피카", "알데바란", "카펠라", "폴룩스", "레굴루스", "안타레스", "오즈","코린","엔비","아이린","플루토"
        ]
    }
}

# 편의 함수들
def get_random_name(culture="western", gender="male"):
    """랜덤 이름 생성"""
    import random
    if culture in NAME_POOLS and gender in NAME_POOLS[culture]:
        return random.choice(NAME_POOLS[culture][gender])
    return "Unknown"

def get_all_names(culture="western", gender="male"):
    """특정 문화권/성별의 모든 이름 반환"""
    if culture in NAME_POOLS and gender in NAME_POOLS[culture]:
        return NAME_POOLS[culture][gender]
    return []

def get_random_name_by_gender(gender="male"):
    """성별에 따른 랜덤 이름 생성 (Easy Character Creator 호환)"""
    import random
    culture = "western"  # 기본 문화권
    if culture in NAME_POOLS and gender in NAME_POOLS[culture]:
        return random.choice(NAME_POOLS[culture][gender])
    return "Unknown"

def detect_gender_from_name(name):
    """이름에서 성별 감지 (Easy Character Creator 호환)"""
    # 모든 문화권에서 이름 검색
    for culture_names in NAME_POOLS.values():
        if name in culture_names.get("male", []):
            return "male"
        elif name in culture_names.get("female", []):
            return "female"
    return "male"  # 기본값

# Easy Character Creator 호환을 위한 클래스
class unified_name_pools:
    @staticmethod
    def get_random_name():
        """랜덤 이름과 성별 반환"""
        import random
        culture = "western"
        gender = random.choice(["male", "female"])
        name = get_random_name(culture, gender)
        return name, gender
    
    @staticmethod
    def get_random_name_by_gender(gender):
        """성별별 랜덤 이름 반환"""
        return get_random_name_by_gender(gender)
    
    @staticmethod
    def detect_gender_from_name(name):
        """이름에서 성별 감지"""
        return detect_gender_from_name(name)
