name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'  # v1.0.0, v2.1.3 등의 태그가 푸시될 때 실행
  workflow_dispatch:  # 수동 실행 가능

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            executable_name: Dawn-of-Stellar.exe
            artifact_name: Dawn-of-Stellar-Windows
            build_options: "--onefile --console --name=Dawn-of-Stellar"
          - os: ubuntu-latest
            executable_name: Dawn-of-Stellar
            artifact_name: Dawn-of-Stellar-Linux
            build_options: "--onefile --console --name=Dawn-of-Stellar"
          - os: macos-latest
            executable_name: Dawn-of-Stellar
            artifact_name: Dawn-of-Stellar-macOS
            build_options: "--onefile --console --name=Dawn-of-Stellar"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Create sounds directory (for audio system)
      run: |
        mkdir -p sounds/bgm sounds/sfx
      shell: bash

    - name: Build with PyInstaller
      run: |
        pyinstaller ${{ matrix.build_options }} main.py
      shell: bash

    - name: Prepare release files
      shell: bash
      run: |
        mkdir release_package
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cp dist/Dawn-of-Stellar.exe release_package/
        else
          cp dist/Dawn-of-Stellar release_package/
        fi
        cp README.md release_package/
        cp requirements.txt release_package/
        if [ -f "SOUND_FIX_GUIDE.md" ]; then
          cp SOUND_FIX_GUIDE.md release_package/
        fi
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cp "파이썬_설치.bat" release_package/ 2>/dev/null || true
          cp "게임시작_간편.bat" release_package/ 2>/dev/null || true
          cp "문제해결.bat" release_package/ 2>/dev/null || true
        fi
        echo "# Dawn Of Stellar - 실행 가이드" > release_package/실행방법.txt
        echo "" >> release_package/실행방법.txt
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          echo "Windows: Dawn-of-Stellar.exe를 더블클릭하세요" >> release_package/실행방법.txt
        else
          echo "Linux/Mac: 터미널에서 ./Dawn-of-Stellar 실행" >> release_package/실행방법.txt
        fi
        echo "" >> release_package/실행방법.txt
        echo "🎵 사운드: 사운드 파일 없어도 정상 작동합니다!" >> release_package/실행방법.txt
        if [ -f "SOUND_FIX_GUIDE.md" ]; then
          echo "📋 문제 해결: SOUND_FIX_GUIDE.md 참조" >> release_package/실행방법.txt
        else
          echo "📋 문제 해결: GitHub Issues에서 도움 요청" >> release_package/실행방법.txt
        fi

    - name: Create ZIP archive (Windows)
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        cd release_package
        Compress-Archive -Path * -DestinationPath ..\${{ matrix.artifact_name }}.zip

    - name: Create ZIP archive (Linux/Mac)
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
        cd release_package
        zip -r ../${{ matrix.artifact_name }}.zip *

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          Dawn-of-Stellar-Windows/Dawn-of-Stellar-Windows.zip
          Dawn-of-Stellar-Linux/Dawn-of-Stellar-Linux.zip
          Dawn-of-Stellar-macOS/Dawn-of-Stellar-macOS.zip
        body: |
          ## 🎮 Dawn Of Stellar - 새 버전 출시!
          
          ### 📥 다운로드 방법
          1. 아래에서 운영체제에 맞는 파일 다운로드
          2. ZIP 파일 압축 해제
          3. 실행 파일 더블클릭으로 게임 시작!
          
          ### 💻 지원 플랫폼
          - **Windows**: Dawn-of-Stellar-Windows.zip
          - **Linux**: Dawn-of-Stellar-Linux.zip  
          - **macOS**: Dawn-of-Stellar-macOS.zip
          
          ### ✅ 특징
          - **Python 설치 불필요** - 실행 파일에 모든 것이 포함되어 있습니다!
          - **🎵 사운드 시스템 완전 개선** - 사운드 파일 없어도 정상 작동합니다
          - **안전한 오디오 처리** - pygame 오류 시에도 게임이 계속됩니다
          - **콘솔 출력 지원** - 오류 발생 시 메시지를 확인할 수 있습니다
          
          ### 🎵 사운드 시스템 개선사항
          - FFVII 스타일 BGM/SFX 지원 (814개 사운드 파일)
          - 사운드 파일 자동 탐지 및 안전한 경로 처리
          - 사운드 없어도 게임 정상 진행 (DummyAudioManager)
          - 실행 파일 크래시 문제 완전 해결
          
          ### 🔧 문제 해결
          - 실행 시 오류가 발생하면 콘솔 창의 오류 메시지를 확인해주세요
          - Windows Defender에서 차단될 수 있습니다 (신뢰할 수 있는 소프트웨어입니다)
          - 문제가 있으면 GitHub Issues에서 도움을 요청해주세요
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
