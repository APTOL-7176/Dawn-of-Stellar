#!/usr/bin/env python3
"""
누락된 스킬 설명 자동 추가 스크립트
"""

import re
import json

def analyze_skill_patterns():
    """스킬 데이터를 분석하여 누락된 description 패턴 확인"""
    
    # 파일 읽기
    with open('game/new_skill_system.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 스킬별 description 누락 확인
    skills_with_desc = []
    skills_without_desc = []
    
    # 스킬 패턴 찾기
    skill_pattern = r'{"name": "([^"]+)"[^}]+(?:"description": "([^"]+)")?[^}]*}'
    matches = re.findall(skill_pattern, content, re.DOTALL)
    
    print("🔍 스킬 설명 분석 결과:")
    print(f"  📊 총 {len(matches)}개 스킬 발견")
    
    for skill_name, description in matches:
        if description:
            skills_with_desc.append(skill_name)
        else:
            skills_without_desc.append(skill_name)
    
    print(f"  ✅ 설명 있는 스킬: {len(skills_with_desc)}개")
    print(f"  ❌ 설명 없는 스킬: {len(skills_without_desc)}개")
    
    if skills_without_desc:
        print(f"\n📋 설명이 없는 스킬들:")
        for skill in skills_without_desc[:10]:  # 처음 10개만 표시
            print(f"    - {skill}")
        if len(skills_without_desc) > 10:
            print(f"    ... 외 {len(skills_without_desc) - 10}개")
    
    return skills_without_desc

def generate_skill_descriptions():
    """스킬 이름을 기반으로 설명 자동 생성"""
    
    skill_descriptions = {
        # 도적 스킬 설명
        "독침": "[독성][정밀] 독이 발린 작은 침으로 적을 찔러 독 상태이상과 마비를 유발하는 기본 공격 기술",
        "암살": "[은신][치명] 그림자에서 나타나 적의 급소를 노리는 치명적인 일격. 적을 기절시키는 효과 포함",
        "연막탄": "[은신][방해] 특수 연막탄을 터뜨려 적들의 시야를 가려 명중률을 크게 떨어뜨리는 지원 기술", 
        "독무": "[독성][필드] 독성 가스를 전장에 퍼뜨려 모든 적에게 지속적인 독 피해를 가하는 필드 기술",
        "독날투척": "[독성][투척] 독이 발린 수리검을 투척하여 적에게 독 피해와 출혈을 동시에 유발",
        "그림자은신": "[은신][회피] 그림자 속으로 몸을 숨겨 일시적으로 모든 공격을 회피하고 다음 공격의 위력을 증가",
        
        # 기타 누락된 스킬들 (패턴 기반)
        "방패방어": "[방어][기사] 방패를 들어 물리 피해를 크게 줄이고 반격 확률을 높이는 방어 자세",
        "창돌격": "[돌격][기사] 창을 들고 적에게 강력한 돌격 공격을 가하는 기사의 기본 기술",
        "아군보호": "[수호][기사] 선택한 아군을 보호하여 받는 피해를 일부 대신 받는 수호 기술",
        "기사도정신": "[정신][버프] 기사의 숭고한 정신력으로 아군 전체의 의지를 강화하여 능력치 향상",
        "성스러운돌격": "[성스러운][기사] 신성한 힘이 깃든 창으로 적에게 강력한 성속성 공격을 가함",
        "수호기사의맹세": "[궁극][기사] 아군을 지키겠다는 맹세로 모든 아군에게 강력한 보호 효과와 능력 향상을 부여",
        
        "신앙의힘": "[신앙][성기사] 깊은 신앙심으로 자신의 능력을 일시적으로 크게 향상시키는 자기 강화 기술",
        "어둠의계약": "[어둠][암흑기사] 어둠의 힘과 계약하여 자신의 생명력을 대가로 강력한 힘을 얻는 특수 기술",
        "용의비늘": "[용족][방어] 드래곤의 강인한 비늘처럼 방어력을 크게 향상시키는 용기사의 방어 기술",
        "드래곤클로": "[용족][날카로움] 드래곤의 날카로운 발톱으로 적을 찢어발기는 강력한 물리 공격",
        "화염숨결": "[용족][화염] 드래곤의 화염 브레스로 적 전체에게 강력한 화염 피해를 입힘",
        "드래곤스피어": "[용족][관통] 드래곤의 힘이 깃든 창으로 적을 관통하는 강력한 단일 공격",
        "드래곤로드": "[궁극][용족] 드래곤의 진정한 힘을 해방하여 모든 적을 압도하는 최강의 공격",
        
        "마력파동": "[마법][파동] 순수한 마력을 파동 형태로 발사하여 적에게 마법 피해를 입히는 기본 마법 공격",
        "원소융합": "[원소][융합] 서로 다른 원소를 융합하여 예측 불가능한 강력한 원소 공격을 발동",
        "마나실드": "[마법][방어] 마나를 실드 형태로 전개하여 마법 공격으로부터 자신을 보호",
        "마법폭발": "[마법][폭발] 축적된 마력을 한순간에 폭발시켜 모든 적에게 강력한 피해를 입힘",
        "아케인미사일": "[마법][유도] 마법으로 생성한 유도 미사일로 적을 정확히 타격하는 중급 공격 마법",
        "마도서의비밀": "[궁극][마법] 고대 마도서의 비밀한 힘을 해방하여 현실을 뒤바꾸는 최강 마법",
        
        "정확한사격": "[궁술][정밀] 정확한 조준으로 적의 약점을 노리는 기본 궁술 기법",
        "연속사격": "[궁술][연속] 빠른 손놀림으로 여러 발의 화살을 연속으로 발사하는 궁수의 기본 기술",
        "폭발화살": "[궁술][폭발] 폭발하는 특수 화살로 단일 대상에게 강력한 피해를 입힘",
        "독화살": "[궁술][독성] 독이 발린 화살로 적에게 독 상태이상을 유발하는 특수 사격",
        "관통사격": "[궁술][관통] 강력한 힘으로 쏜 화살이 여러 적을 관통하여 피해를 입힘",
        "신궁의화살": "[궁극][궁술] 전설의 신궁이 사용하는 절대불가피한 일격의 화살",
        
        "음파공격": "[음악][진동] 강력한 음파로 적의 균형감각을 흐트러뜨리고 피해를 입히는 바드의 기본 공격",
        "치유의노래": "[음악][치유] 아름다운 선율로 아군의 상처를 치유하고 정신을 안정시키는 회복 기술",
        "용기의노래": "[음악][버프] 용기를 북돋우는 노래로 아군 전체의 공격력과 의지를 강화",
        "혼란의선율": "[음악][혼란] 복잡한 선율로 적들의 정신을 혼란시켜 행동을 방해하는 디버프 기술",
        "전쟁의찬가": "[음악][전쟁] 전쟁의 격렬함을 노래하여 아군의 전투 능력을 극대화",
        "영혼의교향곡": "[궁극][음악] 영혼을 울리는 교향곡으로 전장 전체에 절대적인 영향을 미침",
        
        "생명력흡수": "[흡혈][네크로] 적의 생명력을 흡수하여 자신의 체력을 회복하는 사령술",
        "영혼흡수": "[영혼][네크로] 죽은 자의 영혼을 흡수하여 자신의 마력을 회복하는 금기 마법",
        "해골소환": "[소환][네크로] 죽은 자의 뼈로 해골 전사를 소환하여 전투에 참여시킴",
        "저주": "[저주][네크로] 적에게 강력한 저주를 걸어 모든 능력치를 감소시키는 흑마법",
        "죽음의손길": "[죽음][네크로] 죽음의 힘으로 적의 생명력을 직접 빼앗는 치명적인 공격",
        "언데드군단": "[궁극][네크로] 언데드 군단을 소환하여 전장을 지배하는 네크로맨서의 최종 기술",
        
        "시간정지": "[시간][조작] 시간의 흐름을 잠시 정지시켜 적의 행동을 막는 시공간 마법",
        "시간가속": "[시간][가속] 자신의 시간을 가속시켜 행동 속도를 크게 증가시키는 시간 마법",
        "시간역행": "[시간][역행] 시간을 되돌려 최근 받은 피해를 무효화하는 고급 시간 마법",
        "미래예지": "[시간][예지] 미래를 엿보아 적의 공격을 미리 감지하고 회피율을 증가",
        "시간균열": "[시간][균열] 시공간에 균열을 만들어 적을 다른 차원으로 추방하는 위험한 마법",
        "시간의지배자": "[궁극][시간] 시간 자체를 지배하여 전장의 모든 시간을 조작하는 절대 마법",
        
        "화학폭발": "[연금][폭발] 화학 반응을 이용한 폭발로 적에게 강력한 피해를 입히는 연금술",
        "산성용해": "[연금][산성] 강력한 산으로 적의 방어구를 용해시키고 지속 피해를 입힘",
        "회복물약": "[연금][치유] 연금술로 제조한 강력한 회복 물약으로 아군을 치료",
        "변환술": "[연금][변환] 물질을 다른 물질로 변환하여 적의 능력치를 변화시킴",
        "황금변환": "[연금][황금] 연금술의 궁극 목표인 황금 변환으로 강력한 금속성 공격",
        "현자의돌": "[궁극][연금] 전설의 현자의 돌을 사용하여 모든 물질을 지배하는 궁극 연금술",
        
        "레이저사격": "[기계][레이저] 정밀한 레이저로 적을 저격하는 기계공학자의 기본 공격",
        "기계소환": "[기계][소환] 전투용 기계를 소환하여 아군으로 사용하는 소환 기술",
        "에너지실드": "[기계][실드] 에너지 실드를 전개하여 모든 종류의 공격을 방어",
        "오버클럭": "[기계][가속] 기계의 성능을 한계치까지 끌어올려 모든 능력을 향상",
        "메가레이저": "[기계][메가] 거대한 레이저 포로 적 전체를 공격하는 강력한 기계 병기",
        "파괴포탑": "[궁극][기계] 궁극의 파괴 포탑을 설치하여 전장을 지배하는 최종 병기",
        
        "그림자이동": "[그림자][이동] 그림자를 타고 순간이동하여 적의 배후로 이동하는 암살 기술",
        "그림자분신": "[그림자][분신] 그림자로 분신을 만들어 적을 혼란시키고 추가 공격 기회 획득",
        "어둠의칼날": "[그림자][칼날] 어둠을 칼날로 형상화하여 적을 베는 암살자의 공격 기술",
        "침묵의발걸음": "[은신][침묵] 완전히 소리를 지우고 이동하여 다음 공격의 성공률을 극대화",
        "독살": "[독성][암살] 강력한 독으로 적을 서서히 죽음으로 이끄는 잔혹한 암살 기술",
        "그림자의지배자": "[궁극][그림자] 모든 그림자를 지배하여 동시다발적 암살을 감행하는 최종 기술",
        
        "영혼타격": "[영혼][무당] 적의 영혼을 직접 공격하여 정신적 피해를 입히는 신비 공격",
        "정령소환": "[정령][무당] 자연의 정령을 소환하여 전투를 도와주게 하는 소환 기술",
        "축귀": "[귀신][무당] 악한 귀신을 쫓아내어 적의 디버프를 해제하고 정화하는 의식",
        "신내림": "[신령][무당] 신령의 힘을 빌려 일시적으로 모든 능력을 크게 향상시킴",
        "영혼분리": "[영혼][무당] 적의 영혼을 육체에서 분리시켜 무력화하는 강력한 무당술",
        "천지귀신": "[궁극][무당] 천지의 모든 귀신을 불러모아 적을 심판하는 최고 무당술",
        
        "이도류": "[해적][쌍검] 양손에 든 검으로 연속 공격을 가하는 해적의 기본 검술",
        "갈고리던지기": "[해적][투척] 갈고리를 던져 적을 끌어당기거나 이동을 방해하는 기술",
        "해적의함성": "[해적][위협] 바다를 주름잡던 해적의 위협적인 함성으로 적을 위축시킴",
        "보물탐지": "[해적][탐지] 숨겨진 보물을 찾아내는 해적의 특수 능력으로 숨겨진 아이템 발견",
        "해적선포격": "[해적][포격] 해적선의 대포로 적 전체를 강력하게 포격하는 광역 공격",
        "해적왕의보물": "[궁극][해적] 전설의 해적왕이 남긴 보물의 힘으로 모든 것을 압도하는 최강 기술",
        
        "거합베기": "[사무라이][일섬] 칼을 뽑는 동시에 베는 사무라이의 기본이자 극의 기술",
        "무사도": "[사무라이][정신] 무사의 정신으로 죽음을 두려워하지 않는 강인한 의지를 얻음",
        "진공베기": "[사무라이][검압] 칼의 기운으로 공간을 가르는 원거리 검술 공격",
        "명상": "[사무라이][수양] 깊은 명상으로 정신을 집중하여 다음 공격의 위력을 극대화",
        "할복": "[사무라이][희생] 자신에게 피해를 가하여 분노 상태로 들어가는 무사의 각오",
        "무사도비의": "[궁극][사무라이] 진정한 무사만이 터득할 수 있는 검의 극의를 펼치는 최종 기술",
        
        "자연의힘": "[자연][드루이드] 자연의 생명력을 빌려 자신의 능력을 향상시키는 드루이드 마법",
        "동물변신": "[변신][드루이드] 야생 동물의 모습으로 변신하여 해당 동물의 능력을 얻음",
        "가시덩굴": "[자연][속박] 가시덩굴을 소환하여 적의 이동을 방해하고 지속 피해를 입힘",
        "치유의바람": "[자연][치유] 자연의 치유력이 담긴 바람으로 아군 전체를 회복시킴",
        "번개폭풍": "[자연][번개] 자연의 분노로 번개 폭풍을 일으켜 적 전체를 공격",
        "자연의심판": "[궁극][자연] 자연 전체의 힘을 빌려 생명을 거스르는 모든 존재를 심판",
        
        "논리적사고": "[철학][논리] 논리적 사고로 상황을 분석하여 최적의 행동 방향을 결정",
        "변증법": "[철학][토론] 변증법적 논리로 적의 논리를 반박하여 혼란시키는 지적 공격",
        "진리탐구": "[철학][진리] 진리를 탐구하는 철학자의 자세로 모든 환상과 거짓을 간파",
        "소크라테스의무지": "[철학][겸손] '나는 무엇도 모른다'는 겸손으로 모든 정신적 공격을 무효화",
        "플라톤의이데아": "[철학][이상] 완전한 이데아의 세계를 구현하여 현실을 초월하는 힘을 얻음",
        "진리의깨달음": "[궁극][철학] 우주의 진리를 깨달아 모든 존재를 초월하는 절대적 지혜 획득",
    }
    
    return skill_descriptions

def add_missing_descriptions():
    """누락된 설명을 스킬 시스템에 추가"""
    
    print("🔧 스킬 설명 추가 작업 시작...")
    
    # 파일 읽기
    with open('game/new_skill_system.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 생성된 설명 사전
    descriptions = generate_skill_descriptions()
    
    # 각 스킬에 대해 설명 추가
    added_count = 0
    for skill_name, description in descriptions.items():
        # 해당 스킬이 있고 description이 없는 경우만 추가
        skill_pattern = rf'("name": "{re.escape(skill_name)}"[^}}]+?)("sfx":|"damage_type":|"organic_effects":|\}})'
        
        def add_description_replacement(match):
            nonlocal added_count
            before_part = match.group(1)
            after_part = match.group(2)
            
            # description이 이미 있는지 확인
            if '"description":' in before_part:
                return match.group(0)  # 이미 있으면 그대로 반환
            
            # description 추가
            added_count += 1
            return f'{before_part}\n                 "description": "{description}",\n                 {after_part}'
        
        content = re.sub(skill_pattern, add_description_replacement, content, flags=re.DOTALL)
    
    # 파일 저장
    with open('game/new_skill_system.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"✅ 스킬 설명 추가 완료: {added_count}개 설명 추가됨")
    return added_count

if __name__ == "__main__":
    print("🎮 Dawn of Stellar - 스킬 설명 추가 시스템")
    print("=" * 50)
    
    # 1단계: 현재 상태 분석
    missing_skills = analyze_skill_patterns()
    
    if missing_skills:
        print(f"\n🔧 {len(missing_skills)}개 스킬의 설명을 추가합니다...")
        
        # 2단계: 설명 추가
        added_count = add_missing_descriptions()
        
        print(f"\n🎉 작업 완료!")
        print(f"  📝 총 {added_count}개 스킬 설명이 추가되었습니다.")
        print(f"  🎯 이제 모든 스킬이 스킬 선택창에서 설명을 표시할 것입니다.")
    else:
        print("\n✅ 모든 스킬에 설명이 이미 있습니다!")
